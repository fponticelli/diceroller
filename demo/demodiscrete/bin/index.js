// Generated by Haxe 3.4.0
(function () { "use strict";
var Demo = function() { };
Demo.__name__ = true;
Demo.main = function() {
	var d6 = dapi_Discrete.die(6);
	console.log("d6");
	console.log(d6.weights());
	console.log(d6.probabilities());
	console.log(d6.values());
	var twod6 = d6.binary(d6,function(x,y) {
		return x + y;
	});
	console.log("2d6 = d6 + d6");
	console.log(twod6.weights());
	console.log(twod6.probabilities());
	console.log(twod6.values());
	var rerollOnes = d6.always_resample([1]);
	console.log("d6, always reroll 1");
	console.log(rerollOnes.weights());
	console.log(rerollOnes.probabilities());
	console.log(rerollOnes.values());
	var d6plus1 = dapi_Discrete.die(5).unary(function(x1) {
		return x1 + 1;
	});
	console.log("d6 + 1 (should be the same as d6, always reroll 1)");
	console.log(d6plus1.weights());
	console.log(d6plus1.probabilities());
	console.log(d6plus1.values());
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var dapi_Discrete = function(weights,values) {
	this.weighted_values = [];
	var _g1 = 0;
	var _g = weights.length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = { _0 : weights[i], _1 : values[i]};
		this.weighted_values[i] = this1;
	}
	this.compact();
};
dapi_Discrete.__name__ = true;
dapi_Discrete.die = function(n) {
	var _g = [];
	var _g2 = 0;
	var _g1 = n;
	while(_g2 < _g1) {
		var i = _g2++;
		_g.push(1);
	}
	var tmp = _g;
	var _g11 = [];
	var _g3 = 0;
	var _g21 = n;
	while(_g3 < _g21) {
		var i1 = _g3++;
		_g11.push(i1 + 1);
	}
	return new dapi_Discrete(tmp,_g11);
};
dapi_Discrete.compare = function(x,y) {
	if(x._1 == y._1) {
		return 0;
	} else if(x._1 < y._1) {
		return -1;
	} else {
		return 1;
	}
};
dapi_Discrete.prototype = {
	length: function() {
		return this.weighted_values.length;
	}
	,weights: function() {
		var _g = [];
		var _g2 = 0;
		var _g1 = this.weighted_values.length;
		while(_g2 < _g1) {
			var i = _g2++;
			_g.push(this.weighted_values[i]._0);
		}
		return _g;
	}
	,values: function() {
		var _g = [];
		var _g2 = 0;
		var _g1 = this.weighted_values.length;
		while(_g2 < _g1) {
			var i = _g2++;
			_g.push(this.weighted_values[i]._1);
		}
		return _g;
	}
	,probabilities: function() {
		var sum = 0;
		var _g1 = 0;
		var _g = this.weighted_values.length;
		while(_g1 < _g) {
			var i = _g1++;
			sum += this.weighted_values[i]._0;
		}
		var _g2 = [];
		var _g21 = 0;
		var _g11 = this.weighted_values.length;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(this.weighted_values[i1]._0 / sum);
		}
		return _g2;
	}
	,compact: function() {
		this.weighted_values.sort(dapi_Discrete.compare);
		var maybezero_weights = this.weights();
		var maybezero_values = this.values();
		var old_weights = [];
		var old_values = [];
		var j = 0;
		var _g1 = 0;
		var _g = maybezero_weights.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(maybezero_weights[i] > 0) {
				old_weights[j] = maybezero_weights[i];
				old_values[j] = maybezero_values[i];
				++j;
			}
		}
		var k = 0;
		this.weighted_values = [];
		var this1 = { _0 : old_weights[0], _1 : old_values[0]};
		this.weighted_values[0] = this1;
		var _g11 = 1;
		var _g2 = old_weights.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(this.weighted_values[k]._1 == old_values[i1]) {
				var this2 = { _0 : this.weighted_values[k]._0 + old_weights[i1], _1 : this.weighted_values[k]._1};
				this.weighted_values[k] = this2;
			} else {
				++k;
				var this3 = { _0 : old_weights[i1], _1 : old_values[i1]};
				this.weighted_values[k] = this3;
			}
		}
	}
	,unary: function(f) {
		return new dapi_Discrete(this.weights(),this.values().map(f));
	}
	,binary: function(other,f) {
		var m = this.weighted_values.length * other.weighted_values.length;
		var _g = [];
		var _g2 = 0;
		var _g1 = m;
		while(_g2 < _g1) {
			var i = _g2++;
			_g.push(0);
		}
		var weights = _g;
		var _g11 = [];
		var _g3 = 0;
		var _g21 = m;
		while(_g3 < _g21) {
			var i1 = _g3++;
			_g11.push(0.0);
		}
		var values = _g11;
		var k = 0;
		var _g31 = 0;
		var _g22 = this.weighted_values.length;
		while(_g31 < _g22) {
			var i2 = _g31++;
			var _g5 = 0;
			var _g4 = other.weighted_values.length;
			while(_g5 < _g4) {
				var j = _g5++;
				weights[k] = this.weighted_values[i2]._0 * other.weighted_values[j]._0;
				values[k] = f(this.weighted_values[i2]._1,other.weighted_values[j]._1);
				++k;
			}
		}
		return new dapi_Discrete(weights,values);
	}
	,always_resample: function(x) {
		var weights = this.weights();
		var _g1 = 0;
		var _g = this.weighted_values.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _g3 = 0;
			var _g2 = x.length;
			while(_g3 < _g2) {
				var j = _g3++;
				if(this.weighted_values[j]._1 == x[j]) {
					weights[j] = 0;
				}
			}
		}
		return new dapi_Discrete(weights,this.values());
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var thx_Nil = { __ename__ : true, __constructs__ : ["nil"] };
thx_Nil.nil = ["nil",0];
thx_Nil.nil.__enum__ = thx_Nil;
var thx__$Tuple_Tuple0_$Impl_$ = {};
thx__$Tuple_Tuple0_$Impl_$.__name__ = true;
thx__$Tuple_Tuple0_$Impl_$._new = function() {
	var this1 = thx_Nil.nil;
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$["with"] = function(this1,v) {
	var this2 = v;
	return this2;
};
thx__$Tuple_Tuple0_$Impl_$.toString = function(this1) {
	return "Tuple0()";
};
thx__$Tuple_Tuple0_$Impl_$.toNil = function(this1) {
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$.nilToTuple = function(v) {
	var this1 = thx_Nil.nil;
	return this1;
};
var thx__$Tuple_Tuple1_$Impl_$ = {};
thx__$Tuple_Tuple1_$Impl_$.__name__ = true;
thx__$Tuple_Tuple1_$Impl_$._new = function(_0) {
	var this1 = _0;
	return this1;
};
thx__$Tuple_Tuple1_$Impl_$.get__0 = function(this1) {
	return this1;
};
thx__$Tuple_Tuple1_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1, _1 : v};
	return this2;
};
thx__$Tuple_Tuple1_$Impl_$.toString = function(this1) {
	return "Tuple1(" + Std.string(this1) + ")";
};
thx__$Tuple_Tuple1_$Impl_$.arrayToTuple = function(v) {
	var this1 = v[0];
	return this1;
};
var thx__$Tuple_Tuple2_$Impl_$ = {};
thx__$Tuple_Tuple2_$Impl_$.__name__ = true;
thx__$Tuple_Tuple2_$Impl_$.of = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx__$Tuple_Tuple2_$Impl_$._new = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx__$Tuple_Tuple2_$Impl_$.get_left = function(this1) {
	return this1._0;
};
thx__$Tuple_Tuple2_$Impl_$.get_right = function(this1) {
	return this1._1;
};
thx__$Tuple_Tuple2_$Impl_$.flip = function(this1) {
	return { _0 : this1._1, _1 : this1._0};
};
thx__$Tuple_Tuple2_$Impl_$.dropLeft = function(this1) {
	var this2 = this1._1;
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.dropRight = function(this1) {
	var this2 = this1._0;
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : v};
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.toString = function(this1) {
	return "Tuple2(" + Std.string(this1._0) + "," + Std.string(this1._1) + ")";
};
thx__$Tuple_Tuple2_$Impl_$.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : f(this1._1)};
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.squeeze = function(f) {
	return function(tp) {
		return f(tp._0,tp._1);
	};
};
thx__$Tuple_Tuple2_$Impl_$.arrayToTuple2 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1]};
	return this1;
};
var thx__$Tuple_Tuple3_$Impl_$ = {};
thx__$Tuple_Tuple3_$Impl_$.__name__ = true;
thx__$Tuple_Tuple3_$Impl_$.of = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$._new = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$.flip = function(this1) {
	return { _0 : this1._2, _1 : this1._1, _2 : this1._0};
};
thx__$Tuple_Tuple3_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : v};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.toString = function(this1) {
	return "Tuple3(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + ")";
};
thx__$Tuple_Tuple3_$Impl_$.arrayToTuple3 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2]};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : f(this1._2)};
	return this2;
};
var thx__$Tuple_Tuple4_$Impl_$ = {};
thx__$Tuple_Tuple4_$Impl_$.__name__ = true;
thx__$Tuple_Tuple4_$Impl_$.of = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx__$Tuple_Tuple4_$Impl_$._new = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx__$Tuple_Tuple4_$Impl_$.flip = function(this1) {
	return { _0 : this1._3, _1 : this1._2, _2 : this1._1, _3 : this1._0};
};
thx__$Tuple_Tuple4_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : v};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.toString = function(this1) {
	return "Tuple4(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + ")";
};
thx__$Tuple_Tuple4_$Impl_$.arrayToTuple4 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3]};
	return this1;
};
var thx__$Tuple_Tuple5_$Impl_$ = {};
thx__$Tuple_Tuple5_$Impl_$.__name__ = true;
thx__$Tuple_Tuple5_$Impl_$.of = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx__$Tuple_Tuple5_$Impl_$._new = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx__$Tuple_Tuple5_$Impl_$.flip = function(this1) {
	return { _0 : this1._4, _1 : this1._3, _2 : this1._2, _3 : this1._1, _4 : this1._0};
};
thx__$Tuple_Tuple5_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4, _5 : v};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.toString = function(this1) {
	return "Tuple5(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + ")";
};
thx__$Tuple_Tuple5_$Impl_$.arrayToTuple5 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4]};
	return this1;
};
var thx__$Tuple_Tuple6_$Impl_$ = {};
thx__$Tuple_Tuple6_$Impl_$.__name__ = true;
thx__$Tuple_Tuple6_$Impl_$.of = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx__$Tuple_Tuple6_$Impl_$._new = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx__$Tuple_Tuple6_$Impl_$.flip = function(this1) {
	return { _0 : this1._5, _1 : this1._4, _2 : this1._3, _3 : this1._2, _4 : this1._1, _5 : this1._0};
};
thx__$Tuple_Tuple6_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4, _4 : this1._5};
	return this2;
};
thx__$Tuple_Tuple6_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4};
	return this2;
};
thx__$Tuple_Tuple6_$Impl_$.toString = function(this1) {
	return "Tuple6(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + "," + Std.string(this1._5) + ")";
};
thx__$Tuple_Tuple6_$Impl_$.arrayToTuple6 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4], _5 : v[5]};
	return this1;
};
String.__name__ = true;
Array.__name__ = true;
Demo.main();
})();
